# Static web site compiler
FROM node:12 as prebuild

ARG ETH_NETWORK_ID=goerli
ENV ETH_NETWORK_ID=${ETH_NETWORK_ID}
ARG ETH_NETWORK_ENV=dev
ENV ETH_NETWORK_ENV=${ETH_NETWORK_ENV}
ARG BOOTNODES_URL_READ_ONLY
ENV BOOTNODES_URL_READ_ONLY=${BOOTNODES_URL_READ_ONLY}
ARG BOOTNODES_URL_RW
ENV BOOTNODES_URL_RW=${BOOTNODES_URL_RW}
ARG APP_LINKING_DOMAIN
ENV APP_LINKING_DOMAIN=${APP_LINKING_DOMAIN}
ARG REGISTER_URL
ENV REGISTER_URL=${REGISTER_URL}
ARG ACTION_VISIBILITY_URL
ENV ACTION_VISIBILITY_URL=${ACTION_VISIBILITY_URL}
ARG MANAGER_BACKEND_URI
ENV MANAGER_BACKEND_URI=${MANAGER_BACKEND_URI}
ARG MANAGER_BACKEND_PUB_KEY
ENV MANAGER_BACKEND_PUB_KEY=${MANAGER_BACKEND_PUB_KEY}

ADD . /app
WORKDIR /app
RUN npm install && npm run build

FROM node:12 as nginx-runtime

RUN apt update && apt install nginx -y && apt clean

COPY --from=prebuild /app /app

WORKDIR /app

ENTRYPOINT [ "/app/entrypoint.sh" ]

FROM node:12

ARG ETH_NETWORK_ID=goerli
ENV ETH_NETWORK_ID=${ETH_NETWORK_ID}
ARG ETH_NETWORK_ENV=dev
ENV ETH_NETWORK_ENV=${ETH_NETWORK_ENV}
ARG BOOTNODES_URL_READ_ONLY
ENV BOOTNODES_URL_READ_ONLY=${BOOTNODES_URL_READ_ONLY}
ARG BOOTNODES_URL_RW
ENV BOOTNODES_URL_RW=${BOOTNODES_URL_RW}
ARG APP_LINKING_DOMAIN
ENV APP_LINKING_DOMAIN=${APP_LINKING_DOMAIN}
ARG REGISTER_URL
ENV REGISTER_URL=${REGISTER_URL}
ARG ACTION_VISIBILITY_URL
ENV ACTION_VISIBILITY_URL=${ACTION_VISIBILITY_URL}
ARG MANAGER_BACKEND_URI
ENV MANAGER_BACKEND_URI=${MANAGER_BACKEND_URI}
ARG MANAGER_BACKEND_PUB_KEY
ENV MANAGER_BACKEND_PUB_KEY=${MANAGER_BACKEND_PUB_KEY}

COPY --from=prebuild /app /app

WORKDIR /app

# Static web site is available on /app/build
CMD npm run export
